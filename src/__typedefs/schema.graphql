type Query {
  _empty: String

  """ login as a user """
  loginUser(input: InputLogin!): User

  """ get a user's public data"""
  getUser(id: ID!): PublicUser
}

type Mutation {
  _empty: String

  """ register a new user """
  registerUser(input: InputRegisterUser!): User
}

type Subscription {
  _empty: String
}

""" used for logging in """
input InputLogin {
  email: String!
  password: String!
}

""" used for creating a new user """
input InputRegisterUser {
  name: String!
  email: String!
  password: String!
}

""" a type defining a user's public data """
type PublicUser {
  id: ID
  name: String
  email: String
}

""" a type defining a user  """
type User {
  id: ID
  name: String
  email: String
  token: String
}
